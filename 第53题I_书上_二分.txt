class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size()==0){
            return 0;
        }

        int index_one=getFirst(target,0,nums.size()-1,nums);
        int index_two=getLast(target,0,nums.size()-1,nums);

        if(index_one!=(-1)&&index_two!=(-1))
            return index_two-index_one+1;
        return 0;
    }
    int getFirst(int target,int start,int end,vector<int>& nums){
        if(start>end)
            return -1;
        int mid=start+(end-start)/2;

        if(nums[mid]==target){
            if((mid-1>=0 && nums[mid-1]!=target)||mid==0)
                return mid;
            else
                end=mid-1;
        }else if(nums[mid]<target){
            start=mid+1;
        }else{
            end = mid-1;
        }
        return getFirst(target,start,end,nums);
    }

    int getLast(int target,int start,int end,vector<int>& nums){
        if(start>end)
            return -1;
        int mid=start+(end-start)/2;

        if(nums[mid]==target){
            if((mid+1<=nums.size()-1 && nums[mid+1]!=target)||mid==nums.size()-1)
                return mid;
            else
                start=mid+1;
        }else if(nums[mid]<target){
            start=mid+1;
        }else{
            end = mid-1;
        }
        return getLast(target,start,end,nums);
    }
};