class Solution {
public:
    int countDigitOne(int n) {
        bool is_invalid=false;
        if(n<=0){
            is_invalid=true;
            return 0;
        }
        string str=to_string(n);
        int result = count1OfN(str);
        return result;
    }
    int count1OfN(string str){
        int length=str.length();
        string temp;
        if(stoi(str)==0){
            return 0;
        }
        if(length==1){
           return 1;
        }
        int shouWei=0;
        if(str[0]-'0'==1){
            temp=str.substr(1);
            shouWei=stoi(temp)+1;
        }else if(str[0]-'0'>1){
            shouWei=powerBase10(length-1);
        }
        int houJiWei=(str[0]-'0')*powerBase10(length-2)*(length-1);
        temp.clear();
        temp=str.substr(1);
        int diGui=count1OfN(temp);
        return shouWei+houJiWei+diGui;
    }
    int powerBase10(int length){
        int result=1;
        for(int i=0;i<length;i++){
            result*=10;
        }
        return result;
    }
};